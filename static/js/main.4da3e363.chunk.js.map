{"version":3,"sources":["components/Search.js","components/AddAppointment.js","components/AppointmentInfo.js","App.js","index.js"],"names":["DropDown","toggle","orderBy","onOrderByChange","sortBy","onSortByChange","className","role","aria-orientation","aria-labelledby","onClick","Search","query","onQueryChange","useState","toggleSort","setToggleSort","htmlFor","type","name","id","value","onChange","event","target","placeholder","aria-haspopup","aria-expanded","AddAppointment","lastId","onSendAppointment","clearData","ownerName","petName","aptDate","aptTime","aptNotes","toggleForm","setToggleForm","formData","setFormData","rows","appointmentInfo","AppointmentInfo","apt","onDeleteAppointment","App","appointmentList","setAppointmentList","setQuery","setSortBy","setOrderBy","filteredAppointments","filter","item","toLowerCase","includes","sort","a","b","order","fetchData","useCallback","fetch","then","res","json","data","useEffect","myAppointment","reduce","max","Number","myQuery","myOrder","mySort","map","appointmentId","appointment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4da3e363.chunk.js","sourcesContent":["import { BiSearch, BiCaretDown, BiCheck } from \"react-icons/bi\"\r\nimport { useState } from \"react\";\r\n\r\nconst DropDown = ({toggle, orderBy, onOrderByChange, sortBy, onSortByChange}) => {\r\n\r\n    if(!toggle) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"origin-top-right absolute right-0 mt-2 w-56\r\n        rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\r\n        <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\r\n          <div onClick={() => onSortByChange('petName')}\r\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n            role=\"menuitem\">Pet Name { (sortBy==='petName') && <BiCheck />}</div>\r\n          <div onClick={() => onSortByChange('ownerName')}\r\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n            role=\"menuitem\">Owner Name  { (sortBy==='ownerName') && <BiCheck />}</div>\r\n          <div onClick={() => onSortByChange('aptDate')}\r\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n            role=\"menuitem\">Date { (sortBy==='aptDate') && <BiCheck />}</div>\r\n          <div onClick={() => onOrderByChange('asc')}\r\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer border-gray-1 border-t-2\"\r\n            role=\"menuitem\">Asc { (orderBy==='asc') && <BiCheck />}</div>\r\n          <div onClick={() => onOrderByChange('desc')}\r\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n            role=\"menuitem\">Desc { (orderBy==='desc') && <BiCheck />}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst Search = ({query, onQueryChange, orderBy, onOrderByChange, sortBy, onSortByChange}) => {\r\n    const [toggleSort, setToggleSort] = useState(false);\r\n\r\n    return (\r\n        <div className=\"py-5\">\r\n        <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n            <BiSearch />\r\n            <label htmlFor=\"query\" className=\"sr-only\" />\r\n          </div>\r\n          <input type=\"text\" name=\"query\" id=\"query\" value={query}\r\n            onChange={(event) => onQueryChange(event.target.value)}\r\n            className=\"pl-8 rounded-md focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300\" placeholder=\"Search\" />\r\n          <div className=\"absolute inset-y-0 right-0 flex items-center\">\r\n            <div>\r\n              <button type=\"button\" onClick={ () => setToggleSort(!toggleSort)}\r\n                className=\"justify-center px-4 py-2 bg-blue-400 border-2 border-blue-400 text-sm text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                Sort By <BiCaretDown className=\"ml-2\" />\r\n              </button>\r\n              <DropDown \r\n                toggle={toggleSort} \r\n                orderBy = {orderBy}\r\n                onOrderByChange = {onOrderByChange}\r\n                sortBy={sortBy}\r\n                onSortByChange={onSortByChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import { BiCalendarPlus } from \"react-icons/bi\";\r\nimport { useState } from \"react\";\r\n\r\nconst AddAppointment = ({lastId, onSendAppointment}) => {\r\n  const clearData = {\r\n    ownerName: '',\r\n    petName: '',\r\n    aptDate: '',\r\n    aptTime: '',\r\n    aptNotes: ''\r\n  };\r\n  const [toggleForm, setToggleForm] = useState(false);\r\n  const [formData, setFormData] = useState(clearData);\r\n\r\n  function formDataPublish() {\r\n    const appointmentInfo = {\r\n      id: lastId + 1,\r\n      ownerName: formData.ownerName,\r\n      petName: formData.petName,\r\n      aptDate: formData.aptDate + ' ' + formData.aptTime,\r\n      aptNotes: formData.aptNotes\r\n    }\r\n\r\n    onSendAppointment(appointmentInfo);\r\n    setFormData(clearData);\r\n    setToggleForm(!toggleForm);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => setToggleForm(!toggleForm)}\r\n        className={`bg-blue-400 text-white px-2 py-3 w-full text-left rounded-t-md ${\r\n          toggleForm ? \"rounded-t-md\" : \"rounded-md\"\r\n        }`}\r\n      >\r\n        <div>\r\n          <BiCalendarPlus className=\"inline-block align-text-top\" /> Add\r\n          Appointment\r\n        </div>\r\n      </button>\r\n      {toggleForm && (\r\n        <div className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\r\n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n            <label\r\n              htmlFor=\"ownerName\"\r\n              className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\"\r\n            >\r\n              Owner Name\r\n            </label>\r\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"ownerName\"\r\n                id=\"ownerName\"\r\n                onChange={(event) => {setFormData({ ...formData, ownerName: event.target.value})}}\r\n                value={formData.ownerName}\r\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n            <label\r\n              htmlFor=\"petName\"\r\n              className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\"\r\n            >\r\n              Pet Name\r\n            </label>\r\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"petName\"\r\n                id=\"petName\"\r\n                onChange={(event) => {setFormData({ ...formData, petName: event.target.value})}}\r\n                value={formData.petName}\r\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n            <label\r\n              htmlFor=\"aptDate\"\r\n              className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\"\r\n            >\r\n              Apt Date\r\n            </label>\r\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n              <input\r\n                type=\"date\"\r\n                name=\"aptDate\"\r\n                id=\"aptDate\"\r\n                onChange={(event) => {setFormData({ ...formData, aptDate: event.target.value})}}\r\n                value={formData.aptDate}\r\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n            <label\r\n              htmlFor=\"aptTime\"\r\n              className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\"\r\n            >\r\n              Apt Time\r\n            </label>\r\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n              <input\r\n                type=\"time\"\r\n                name=\"aptTime\"\r\n                id=\"aptTime\"\r\n                onChange={(event) => {setFormData({ ...formData, aptTime: event.target.value})}}\r\n                value={formData.aptTime}\r\n                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n            <label\r\n              htmlFor=\"aptNotes\"\r\n              className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\"\r\n            >\r\n              Appointment Notes\r\n            </label>\r\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n              <textarea\r\n                id=\"aptNotes\"\r\n                name=\"aptNotes\"\r\n                rows=\"3\"\r\n                onChange={(event) => {setFormData({ ...formData, aptNotes: event.target.value})}}\r\n                value={formData.aptNotes}\r\n                className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md\"\r\n                placeholder=\"Detailed comments about the condition\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"pt-5\">\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                type=\"submit\"\r\n                onClick={formDataPublish}\r\n                className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-400 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAppointment;\r\n","import { BiTrash } from \"react-icons/bi\";\r\n\r\nconst AppointmentInfo = ({ apt, onDeleteAppointment }) => {\r\n  return (\r\n    <li className=\"px-3 py-3 flex items-start\">\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onDeleteAppointment(apt.id)}\r\n        className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-red-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n      >\r\n        <BiTrash />\r\n      </button>\r\n      <div className=\"flex-grow\">\r\n        <div className=\"flex items-center\">\r\n          <span className=\"flex-none font-medium text-2xl text-blue-500\">\r\n            {apt.petName}\r\n          </span>\r\n          <span className=\"flex-grow text-right\">{apt.aptDate}</span>\r\n        </div>\r\n        <div>\r\n          <b className=\"font-bold text-blue-500\">Owner:</b> {apt.ownerName}\r\n        </div>\r\n        <div className=\"leading-tight\">{apt.aptNotes}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default AppointmentInfo;\r\n","import { useState, useEffect, useCallback } from \"react\";\nimport { BiCalendar } from \"react-icons/bi\";\nimport Search from \"./components/Search\";\nimport AddAppointment from \"./components/AddAppointment\";\nimport AppointmentInfo from \"./components/AppointmentInfo\";\n\nfunction App() {\n  const [appointmentList, setAppointmentList] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"petName\");\n  const [orderBy, setOrderBy] = useState(\"asc\");\n\n  const filteredAppointments = appointmentList.filter(\n    item => {\n      return (\n        item.petName.toLowerCase().includes(query.toLowerCase()) ||\n        item.ownerName.toLowerCase().includes(query.toLowerCase()) ||\n        item.aptNotes.toLowerCase().includes(query.toLowerCase())\n      )\n    }\n  ).sort((a,b) => {\n    let order = (orderBy === 'asc') ? 1 : -1;\n    return (\n      a[sortBy].toLowerCase() < b[sortBy].toLowerCase() \n      ? -1 * order : 1 * order \n    )\n  })\n\n\n  const fetchData = useCallback(() => {\n    fetch(\"./data.json\")\n      .then((res) => res.json())\n      .then((data) => {\n        setAppointmentList(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <div className=\"App container mx-auto mt-3 font-thin\">\n      <h1 className=\"text-5xl mb-3\">\n        {\" \"}\n        <BiCalendar className=\"inline-block text-red-400 align-top\" /> Your\n        Appointments\n      </h1>\n      <AddAppointment \n        onSendAppointment={myAppointment => setAppointmentList([...appointmentList, myAppointment])}\n        lastId={appointmentList.reduce((max, item) => Number(item.id) > max ? Number(item.id) : max, 0)}\n      />\n      <Search query={query} \n      onQueryChange={ myQuery => setQuery(myQuery) }\n      orderBy={orderBy}\n      onOrderByChange={ myOrder => setOrderBy(myOrder) }\n      sortBy={sortBy}\n      onSortByChange={ mySort => setSortBy(mySort) }\n      />\n\n      <ul className=\"divide-y divide-gray-200\">\n        {filteredAppointments.map((apt) => (\n          <AppointmentInfo\n            key={apt.id}\n            apt={apt}\n            onDeleteAppointment={(appointmentId) => {\n              setAppointmentList(\n                appointmentList.filter(\n                  (appointment) => appointment.id !== appointmentId\n                )\n              );\n            }}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}